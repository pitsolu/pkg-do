#!/usr/bin/env php
<?php

$app_root = realpath(__DIR__."/../../../../");
$pkg_dir = realpath(__DIR__."/../");

// $app_root = realpath(__DIR__."/../../");
// $pkg_dir = realpath(__DIR__."/../");

// $cfg = parse_ini_file(sprintf("%s/cfg/app.ini", $app_root));

// if(trim($cfg["app-name"]) == "__APP__")
	// throw new \Exception(
		// "Create an cfg[app-name] in your [cfg/app.ini] file via [generate:app cli] cmd!");

require(sprintf("%s/vendor/autoload.php", $app_root));

use Strukt\Fs;

$manifest_files = explode("\n", Fs::cat(sprintf("%s/manifest", $pkg_dir)));

foreach($manifest_files as $file){

	$info = pathinfo($file);

	if(array_key_exists("dirname", $info)){

		// $dir = str_replace("app/src/App", sprintf("app/src/%s", $cfg["app-name"]), $info["dirname"]);

		// $dir = sprintf("%s/%s", $app_root, $dir);

		$dir = sprintf("%s/%s", $app_root, $info["dirname"]);//

		if(!Fs::isDir($dir)){

			Fs::mkdir($dir);
		}

		$o_file = sprintf("%s/%s", $dir, $info["basename"]);
		$p_file = sprintf("%s/%s/%s", $pkg_dir, $info["dirname"], $info["basename"]);

		if(Fs::isFile($o_file)){

			rename($o_file, sprintf("%s~", $o_file));
		}

		$content = Fs::cat($p_file);
		// $content = str_replace("__APP__", $cfg["app-name"], Fs::cat($p_file));
		$file = new SplFileObject($o_file, "w+"); 
		$file->fwrite($content);
	}
}